# 模块
# 一个函数就是一个功能，那么把一些常用的函数放在一个py文件中，这个文件就称之为模块，模块，就是一些列常用功能的集合体

"""
    为什么要使用模块
        1.从文件级别组织程序，更方便管理 功能越来越多，为了方便管理，我们通常将程序分成一个个的文件，这样做程序的结构更清晰，方便管理。这时我们不仅仅可以把这些文件当做脚本去执行，还可以把他们当做模块来导入到其他的模块中，实现了功能的重复利用
        2.拿来主义，提升开发效率 同样的原理，我们也可以下载别人写好的模块然后导入到自己的项目中使用，这种拿来主义，可以极大地提升我们的开发效率，避免重复造轮子
"""

"""
模块的分类
    第一类：内置模块，也叫做标准库。此类模块就是python解释器给你提供的，比如我们之前见过的time模块,os模块
    第二类：第三方模块，第三方库。一些python大神写的非常好用的模块，必须通过pip install 指令安装的模块
    第三类：自定义模块。我们自己在项目中定义的一些模块
"""

# import
# 　同一个模块不会引入多次　已经优化
import myModule
import myModule
import myModule

# qzy
# 8
name = '123'
print(name)  # 123
print(myModule.name)  # qzy

# 为模块起名
import myModule as my

print(my.name)  # qzy

# from ... import ...
from myModule import add

print(add())  # 8

# 与import的区别
#   好处：使用起来方便了
#   坏处：容易与当前执行文件中的名字冲突
