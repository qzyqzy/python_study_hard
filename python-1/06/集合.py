
# 集合 set
# 是一个无序的不重复元素序列
# 使用大括号 {} 或者 set() 函数创建
# 创建一个空集合必须使用set()
# {} 用来创建一个空字符串


# 1 == True
a = {True, 1}
print(a)  # { True }


# 去重功能

s = {1, 2, 3, 3, 2, 1}
print(s)  # {1, 2, 3}

# 添加单个元素
s.add(4)
print(s)  # {1, 2, 3, 4}

s.add((10, 11, 12))
print(s)  # {1, 2, 3, 4, (10, 11, 12)}

# 添加多个元素
# 参数为列表、元组、字典(key)等
s.update((13, 14), {16: 15})
print(s)  # {1, 2, 3, 4, (10, 11, 12), 13, 14, 16}

# 移除元素
# remove 将元素从其中移除、元素不存在会发生错误
# discard 元素不存在不会发生错误
# pop 会对集合进行无序的排列，然后将这个无序排列集合的左面第一个元素进行删除

s.remove(16)
print(s)  # {1, 2, 3, 4, (10, 11, 12), 13, 14}
# s.remove(16)
# print(s)

s.discard(16)
print(s)  # {1, 2, 3, 4, (10, 11, 12), 13, 14}

print(s.pop())  # 1

# 计算集合的元素
print(len(s))  # 6

# 清空集合
s.clear()
print(s)  # set()

# 集合的运算

s1 = {1, 2, 3}
s2 = {3, 4, 5, 6}

# & 交集
s = s1 & s2
print(s)  # {3}

# | 并集
s = s1 | s2
print(s)  # {1, 2, 3, 4, 5, 6}

# - 差集
s = s1-s2
print(s)  # {1, 2}

# ^ 异或集 只出现一次的数值集合
s = s1 ^ s2
print(s)  # {1, 2, 4, 5, 6}

# > 检查一个集合是否是另一个集合的子集
# 如果a集合中的元素全部都在b集合中出现，那么a集合就是b集合的子集，b集合是a集合超集
a = {1, 2}
b = {1, 2, 3}
print(a <= b)  # True

